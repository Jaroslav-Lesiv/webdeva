{"version":3,"sources":["assets/js/navigation/index.js","assets/js/config.js","assets/js/helper.js","assets/js/images.js","assets/js/notification/index.js","assets/js/lazyLoad/index.js","assets/js/textBracket/index.js","assets/js/contacts/index.js","assets/js/main.js"],"names":["navLinks","document","querySelectorAll","debounce","func","wait","immediate","timeout","context","args","arguments","callNow","setTimeout","apply","ScrollControl","links","hash","window","location","pathname","map","link","getAttribute","replace","nodeList","querySelector","selector","addEventListener","sectionHandler","linksHandler","_updateNavigation","updateNavigation","updateSections","node","coords","getBoundingClientRect","isCurrent","top","bottom","forEach","preventDefault","classList","add","title","history","replaceState","remove","find","scrollTo","offsetTop","MobileControl","isActive","button","nav","toggle","main","render","http","secret","config","domain","create","createElement","tagname","div","span","ul","li","strong","a","h3","h4","h5","p","img","setStyle","styles","Object","entries","key","value","style","Http","data","success","url","error","myDomain","_url","xhr","XMLHttpRequest","_secret","json","JSON","stringify","onreadystatechange","readyState","DONE","status","response","open","setRequestHeader","send","require","NotificationBlock","cloneNode","NotificationContainer","icon","src","mail","NotificationContent","Notification","body","append","anim_show","anim_hide","label","mess","id","Date","prepend","el","_NotificationContainer","className","_NotificationContent","_icon","_NotificationLabel","innerHTML","_NotificationMessage","_notification","loadImages","images","LazyLoad","checkPosition","length","isVisible","image","showImage","undefined","elem","windowHeight","documentElement","clientHeight","topVisible","bottomVisible","_src","_bg","Array","prototype","slice","call","filter","backgroundImage","lazy","TextBracket","dataset","keywords","duration","words","split","current","createNode","bracket","before","after","wordWrap","word","wordsSelector","_word","textWord","wordSlider","maxWidth","offsetWidth","maxHeight","offsetHeight","update","textBracket","form","getElementById","message","post","particlesJS","animationHandler","selectors","handle","animate","start","checkScroll"],"mappings":"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","file":"main.791fe90c.map","sourceRoot":"../src","sourcesContent":["const navLinks = document.querySelectorAll('#nav ul.list li a');\r\n\r\nfunction debounce(func, wait, immediate) {\r\n\tvar timeout;\r\n\treturn function() {\r\n\t\tvar context = this,\r\n\t\t\targs = arguments;\r\n\t\tvar later = function() {\r\n\t\t\ttimeout = null;\r\n\t\t\tif (!immediate) func.apply(context, args);\r\n\t\t};\r\n\t\tvar callNow = immediate && !timeout;\r\n\t\tclearTimeout(timeout);\r\n\t\ttimeout = setTimeout(later, wait);\r\n\t\tif (callNow) func.apply(context, args);\r\n\t};\r\n}\r\nconst ScrollControl = class {\r\n\tconstructor({ links = [] }) {\r\n\t\tthis.hash = window.location.pathname;\r\n\r\n\t\tthis.links = [...links].map(link => ({\r\n\t\t\tnode: link,\r\n\t\t\thash: link.getAttribute('href').replace('#', '/'),\r\n\t\t\tselector: link.getAttribute('href').replace('/', '#'),\r\n\t\t\ttitle: link.getAttribute('title')\r\n\t\t}));\r\n\r\n\t\tthis.nodeList = [\r\n\t\t\t...this.links.map(link => ({\r\n\t\t\t\tnode: document.querySelector(link.selector),\r\n\t\t\t\thash: link.hash\r\n\t\t\t}))\r\n\t\t];\r\n\r\n\t\twindow.addEventListener('scroll', _ => this.sectionHandler());\r\n\t\tthis.linksHandler();\r\n        this._updateNavigation = debounce(this.updateNavigation, 30);\r\n        if (this.hash && this.hash !== '/') this.updateSections()\r\n\t}\r\n\r\n\tsectionHandler() {\r\n\t\tfor (let node of this.nodeList) {\r\n\t\t\tconst coords = node.node.getBoundingClientRect();\r\n\t\t\tconst isCurrent = coords.top >= 0 || coords.bottom - 40 > 0;\r\n\t\t\tif (isCurrent) {\r\n\t\t\t\tthis.hash = node.hash;\r\n\t\t\t\tthis._updateNavigation();\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tlinksHandler() {\r\n\t\tthis.links.forEach(link => {\r\n\t\t\tlink.node.addEventListener('click', event => {\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tthis.hash = link.hash;\r\n\t\t\t\tthis.updateSections();\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\tupdateNavigation() {\r\n\t\tthis.links.forEach(link => {\r\n\t\t\tif (link.hash === this.hash) {\r\n\t\t\t\tlink.node.classList.add('btn-primary');\r\n\t\t\t\tconst title = `WebDeva - ${link.title}`;\r\n\t\t\t\twindow.history.replaceState(null, null, link.hash);\r\n\t\t\t\twindow.document.title = title;\r\n\t\t\t} else {\r\n\t\t\t\tlink.node.classList.remove('btn-primary');\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tupdateSections() {\r\n\t\tconst node = this.nodeList.find(node => node.hash === this.hash).node;\r\n\t\twindow.scrollTo({\r\n\t\t\ttop: node.offsetTop,\r\n\t\t\tbehavior: 'smooth'\r\n\t\t});\r\n\t}\r\n};\r\n\r\nnew ScrollControl({\r\n\tlinks: navLinks\r\n});\r\n\r\nconst MobileControl = class {\r\n\tconstructor() {\r\n\t\tthis.isActive = false;\r\n\t\tthis.button = document.querySelector('#nav-toggle_menu');\r\n\t\tthis.nav = document.querySelector('#nav');\r\n\t\tthis.button.addEventListener('click', () => this.toggle());\r\n\t\tthis.main = document.querySelector('.main');\r\n\t}\r\n\r\n\ttoggle() {\r\n\t\tthis.isActive = !this.isActive;\r\n\t\t// this.isActive ? this.main.classList.add('blur') : this.main.classList.remove('blur')\r\n\t\tthis.render();\r\n\t}\r\n\r\n\trender() {\r\n\t\tif (this.isActive) {\r\n\t\t\tthis.button.classList.add('active');\r\n\t\t\tthis.nav.classList.add('active');\r\n\t\t} else {\r\n\t\t\tthis.button.classList.remove('active');\r\n\t\t\tthis.nav.classList.remove('active');\r\n\t\t}\r\n\t}\r\n};\r\n\r\nnew MobileControl();\r\n","export default {\r\n    secret: 'WCUj3/(iTn.Nw4M]ezy#DU5G&P/0Un',\r\n    domain: 'https://still-journey-84385.herokuapp.com'\r\n}","import config from './config'\r\nconst { secret, domain } = config\r\nconst create = tagname => document.createElement(tagname);\r\n\r\nconst div = create(\"div\");\r\nconst span = create(\"span\");\r\nconst nav = create(\"nav\");\r\nconst ul = create(\"ul\");\r\nconst li = create(\"li\");\r\nconst strong = create(\"strong\");\r\nconst a = create(\"a\");\r\nconst h3 = create(\"h3\");\r\nconst h4 = create(\"h4\");\r\nconst h5 = create(\"h5\");\r\nconst p = create(\"p\");\r\nconst img = create(\"img\");\r\nconst button = create(\"button\");\r\n\r\nconst setStyle = (selector, styles = {}) => {\r\n    for (let [key, value] of Object.entries(styles)) {\r\n      selector.style[key] = value;\r\n    }\r\n  };\r\n\r\nconst Http = class {\r\n  constructor({ secret, domain }) {\r\n    this.secret = secret\r\n    this.domain = domain\r\n  }\r\n\r\n  post({ data, success, error, url, myDomain = true }) {\r\n    const _url = myDomain ? `${this.domain}/${url}` : url  \r\n\r\n    const xhr = new XMLHttpRequest();\r\n\r\n    if (myDomain) data._secret = this.secret\r\n\r\n    const json = JSON.stringify(data)\r\n\r\n    \r\n    \r\n\r\n    xhr.onreadystatechange = () => {\r\n      if(xhr.readyState == XMLHttpRequest.DONE && xhr.status == 200) {\r\n         success(xhr.response)\r\n      }\r\n    }\r\n\r\n    // Отсылаем объект в формате JSON и с Content-Type application/json\r\n    // Сервер должен уметь такой Content-Type принимать и раскодировать\r\n    xhr.open(\"POST\", _url, true)\r\n    xhr.setRequestHeader('Content-type', 'application/json; charset=utf-8');\r\n    xhr.send(json);\r\n  }\r\n}\r\nconst http = new Http({ secret, domain })\r\n\r\nexport {\r\n    div,\r\n    span,\r\n    nav,\r\n    ul,\r\n    li,\r\n    strong,\r\n    a,\r\n    h3,\r\n    h4,\r\n    h5,\r\n    p,\r\n    img,\r\n    button,\r\n    setStyle,\r\n    http\r\n}","export default {\n    mail: require('../img/icon/mail.png')\n}","import {\r\n    div,\r\n    span,\r\n    nav,\r\n    ul,\r\n    li,\r\n    strong,\r\n    a,\r\n    h3,\r\n    h4,\r\n    h5,\r\n    p,\r\n    img,\r\n    button,\r\n    setStyle\r\n} from '../helper'\r\nimport {mail} from '../images'\r\n\r\nconst NotificationBlock = div.cloneNode()\r\nsetStyle(NotificationBlock, {\r\n    position: 'fixed',\r\n    right: '15px',\r\n    bottom: '15px',\r\n    padding: '10px',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'center',\r\n    alignItems: 'flex-end',\r\n})\r\n\r\nconst NotificationContainer = div.cloneNode()\r\nsetStyle(NotificationContainer, {\r\n    padding: '2px 25px',\r\n    borderRadius: '3px',\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    boxShadow: '0 3px 13px 1px rgba(0,0,0,0.12)',\r\n    backgroundColor: '#ffffff',\r\n    margin: '5px 0',\r\n    minWidth: '250px'\r\n})\r\n\r\n\r\nconst icon = img.cloneNode()\r\nicon.src = mail\r\nsetStyle(icon, {\r\n    width: '35px',\r\n    height: '35px',\r\n    marginRight: '15px'\r\n})\r\n\r\nconst NotificationContent = div.cloneNode()\r\nsetStyle(NotificationContent, {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    flexGrow: 1\r\n})\r\nconst Notification = class {\r\n    constructor() {\r\n        this.NotificationBlock = NotificationBlock\r\n        document.body.append(NotificationBlock)\r\n        this.anim_show = 'slideInRight'\r\n        this.anim_hide = 'slideOutRight'\r\n    }\r\n    \r\n\r\n    add({ label, mess }) {\r\n        let id = `_${+new Date()}`\r\n        this.NotificationBlock.prepend( this.create({ label, mess, id }) )\r\n        setTimeout( () => this.remove(id), 3000 )\r\n    }\r\n\r\n    remove(id) {\r\n        const el = this.NotificationBlock.querySelector(`#${id}`)\r\n        el.classList.remove(this.anim_show)\r\n        el.classList.add(this.anim_hide)\r\n        setTimeout( () => el.remove(), 500 )\r\n    }\r\n    create({ label, mess, id }) {\r\n        const _NotificationContainer = NotificationContainer.cloneNode()\r\n        _NotificationContainer.id = id\r\n        _NotificationContainer.className = `transition ${this.anim_show}`\r\n        const _NotificationContent = NotificationContent.cloneNode()\r\n\r\n        const _icon = icon.cloneNode()\r\n\r\n        const _NotificationLabel = h4.cloneNode()\r\n        _NotificationLabel.className = 'card-label snake'\r\n        _NotificationLabel.innerHTML = label\r\n\r\n        const _NotificationMessage = p.cloneNode()\r\n        _NotificationMessage.className = 'description'\r\n        _NotificationMessage.innerHTML = mess\r\n\r\n        _NotificationContent.append(_NotificationLabel, _NotificationMessage)\r\n        _NotificationContainer.append(_icon, _NotificationContent)\r\n\r\n        return _NotificationContainer\r\n    }\r\n}\r\n\r\n    export const _notification = new Notification()\r\n    window._notification = _notification","const loadImages = document.querySelectorAll('.lazy-load') || [];\r\nconst images = {\r\n    'gw_list': require('../../img/examples/goodWorker/gw_list.png'),\r\n\r\n    'ng_desktop': require('../../img/examples/normalgame/ng_desktop.png'),\r\n    'ng_mobile': require('../../img/examples/normalgame/ng_mobile.png'),\r\n\r\n    'cam_list': require('../../img/examples/cryptarena-mobile/cam_mobile_list.png'),\r\n    'cam_coin': require('../../img/examples/cryptarena-mobile/cam_mobile_coin.png'),\r\n    'cam_news': require('../../img/examples/cryptarena-mobile/cam_mobile_news.png'),\r\n\r\n    'jlm_desktop': require('../../img/examples/jlm/jlm_desktop.png'),\r\n    'jlm_mobile': require('../../img/examples/jlm/jlm_mobile.png'),\r\n    'jlme_desktop': require('../../img/examples/jlm/jlme_desktop.jpg'),\r\n\r\n    'nomis_desktop': require('../../img/examples/nomis/nomis_desktop.png'),\r\n    'nomis_mobile': require('../../img/examples/nomis/nomis_mobile.png'),\r\n}\r\nconst LazyLoad = class {\r\n\tconstructor({ images }) {\r\n\t\tthis.images = images;\r\n\t\twindow.addEventListener('scroll', () => this.checkPosition());\r\n\t}\r\n\r\n\tcheckPosition() {\r\n\t\tthis.images.length &&\r\n\t\t\tthis.images.forEach(image =>\r\n\t\t\t\tthis.isVisible(image) ? this.showImage(image) : undefined\r\n\t\t\t);\r\n\t}\r\n\r\n\tisVisible(elem) {\r\n\t\tconst coords = elem.getBoundingClientRect();\r\n\r\n\t\tconst windowHeight = document.documentElement.clientHeight;\r\n\r\n\t\tconst topVisible =\r\n\t\t\tcoords.top + windowHeight / 2 > 0 && coords.top < windowHeight;\r\n\t\tconst bottomVisible =\r\n\t\t\tcoords.bottom < windowHeight + windowHeight / 2 && coords.bottom > 0;\r\n\r\n\t\treturn topVisible || bottomVisible;\r\n\t}\r\n\r\n\tshowImage(elem) {\r\n\t\tconst _src = elem.getAttribute('realsrc');\r\n\t\tconst _bg = elem.getAttribute('realbg');\r\n\t\tif (_src) {\r\n\t\t\telem.src = _src;\r\n\t\t\tthis.images = Array.prototype.slice\r\n\t\t\t\t.call(this.images)\r\n\t\t\t\t.filter(image => image !== elem);\r\n\t\t} else if (_bg) {\r\n\t\t\telem.style.backgroundImage = `url(${images[_bg]}`;\r\n\t\t\tthis.images = Array.prototype.slice\r\n\t\t\t\t.call(this.images)\r\n\t\t\t\t.filter(image => image !== elem);\r\n        }\r\n\t}\r\n};\r\n\r\nconst lazy = new LazyLoad({\r\n\timages: loadImages\r\n});\r\n","import {\r\n    div,\r\n    span,\r\n    nav,\r\n    ul,\r\n    li,\r\n    strong,\r\n    a,\r\n    h3,\r\n    p,\r\n    img,\r\n    button,\r\n    setStyle\r\n} from '../helper'\r\nconst TextBracket = class {\r\n    constructor({\r\n        selector\r\n    }) {\r\n        if (!selector) return;\r\n        this.selector = selector;\r\n        const {\r\n            keywords = [], duration = 4000\r\n        } = this.selector.dataset;\r\n        this.duration = duration;\r\n        this.words = keywords.split(\",\");\r\n\r\n        this.current = 0;\r\n        this.createNode();\r\n    }\r\n    createNode() {\r\n        const bracket = div.cloneNode();\r\n        const before = h3.cloneNode();\r\n        const after = h3.cloneNode();\r\n        const wordWrap = div.cloneNode();\r\n        this.wordWrap = wordWrap;\r\n        const word = h3.cloneNode();\r\n        word.className = 'color-primary'\r\n\r\n        before.className = 'color-primary bold mr-10'\r\n        after.className = 'color-primary bold ml-10'\r\n\r\n        setStyle(word, {\r\n            display: 'inline-flex',\r\n            justifyContent: 'center',\r\n            textTransform: 'uppercase',\r\n            fontWeight: '600',\r\n        })\r\n\r\n        setStyle(bracket, {\r\n            display: \"inline-flex\"\r\n        });\r\n\r\n        setStyle(wordWrap, {\r\n            display: \"flex\",\r\n            overflow: 'hidden',\r\n        });\r\n\r\n        before.innerHTML = \"[\";\r\n        after.innerHTML = \"]\";\r\n\r\n        bracket.append(before, wordWrap, after);\r\n\r\n        let maxWidth = 0;\r\n        let maxHeight = 0;\r\n        this.wordsSelector = this.words.map(textWord => {\r\n            const _word = word.cloneNode(true);\r\n            _word.innerHTML = textWord;\r\n            return _word;\r\n        });\r\n        const wordSlider = div.cloneNode()\r\n        setStyle(wordSlider, {\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            transition: '0.4s'\r\n        })\r\n        wordSlider.append(...this.wordsSelector)\r\n        this.wordWrap.append(wordSlider);\r\n\r\n        this.selector.append(bracket);\r\n\r\n        this.maxWidth = `${wordSlider.offsetWidth}px`\r\n        this.maxHeight = this.wordsSelector[0].offsetHeight\r\n        setStyle(this.wordWrap, {\r\n            width: this.maxWidth,\r\n            height: `${this.maxHeight}px`,\r\n            position: \"relative\",\r\n        });\r\n        setStyle(wordSlider, {\r\n            position: 'absolute',\r\n            top: 0,\r\n            left: 0,\r\n        })\r\n        this.wordSlider = wordSlider\r\n        this.update();\r\n    }\r\n    update() {\r\n        setStyle(this.wordSlider, {\r\n            transform: `translateY(-${this.current * this.maxHeight}px)`\r\n        })\r\n        this.current =\r\n            this.current >= this.wordsSelector.length - 1 ? 0 : this.current + 1;\r\n\r\n        setTimeout(() => this.update(), this.duration);\r\n    }\r\n};\r\nconst textBracket = document.querySelector(\".text-bracket\");\r\nnew TextBracket({\r\n    selector: textBracket\r\n});","import { http } from '../helper'\r\nimport { _notification } from '../notification'\r\nconst form = document.getElementById('contact_form')\r\n\r\nform.addEventListener('submit', event => {\r\n    event.preventDefault()\r\n    const [name, email, message] = [form.querySelector('#contact_name').value, form.querySelector('#contact_email').value, form.querySelector('#contact_message').value]\r\n\r\n    const data = {\r\n        name,\r\n        email,\r\n        message\r\n    }\r\n    form.classList.add('loading')\r\n\r\n    http.post({ \r\n        data, url: `message`, \r\n        success: () => {\r\n            _notification.add({ label: `Message sending`, mess: 'You messages sended seccessfull :)' })\r\n            form.classList.remove('loading')\r\n        }, \r\n        error: () => {\r\n            _notification.add({ label: `Message sending`, mess: 'You messages not sended :(' }) \r\n            form.classList.remove('loading')\r\n        }\r\n    })\r\n\r\n\r\n})","import './navigation';\r\nimport './notification';\r\nimport './lazyLoad';\r\nimport './textBracket';\r\n// import './animation'\r\n// import './examples'\r\nimport './contacts';\r\n\r\n// import './http'\r\nparticlesJS('particles-js', {\r\n\tparticles: {\r\n\t\tnumber: {\r\n\t\t\tvalue: 40,\r\n\t\t\tdensity: {\r\n\t\t\t\tenable: true,\r\n\t\t\t\tvalue_area: 500\r\n\t\t\t}\r\n\t\t},\r\n\t\tcolor: {\r\n\t\t\tvalue: '#59DBD5'\r\n\t\t},\r\n\t\tshape: {\r\n\t\t\ttype: 'circle',\r\n\t\t\tstroke: {\r\n\t\t\t\twidth: 0,\r\n\t\t\t\tcolor: '#505050'\r\n\t\t\t},\r\n\t\t\tpolygon: {\r\n\t\t\t\tnb_sides: 5\r\n\t\t\t},\r\n\t\t\timage: {\r\n\t\t\t\tsrc: 'img/github.svg',\r\n\t\t\t\twidth: 100,\r\n\t\t\t\theight: 100\r\n\t\t\t}\r\n\t\t},\r\n\t\topacity: {\r\n\t\t\tvalue: 0.5,\r\n\t\t\trandom: false,\r\n\t\t\tanim: {\r\n\t\t\t\tenable: false,\r\n\t\t\t\tspeed: 1,\r\n\t\t\t\topacity_min: 0.1,\r\n\t\t\t\tsync: false\r\n\t\t\t}\r\n\t\t},\r\n\t\tsize: {\r\n\t\t\tvalue: 3,\r\n\t\t\trandom: true,\r\n\t\t\tanim: {\r\n\t\t\t\tenable: false,\r\n\t\t\t\tspeed: 40,\r\n\t\t\t\tsize_min: 0.1,\r\n\t\t\t\tsync: false\r\n\t\t\t}\r\n\t\t},\r\n\t\tline_linked: {\r\n\t\t\tenable: true,\r\n\t\t\tdistance: 150,\r\n\t\t\tcolor: '#505050',\r\n\t\t\topacity: 0.4,\r\n\t\t\twidth: 1\r\n\t\t},\r\n\t\tmove: {\r\n\t\t\tenable: true,\r\n\t\t\tspeed: 6,\r\n\t\t\tdirection: 'none',\r\n\t\t\trandom: false,\r\n\t\t\tstraight: false,\r\n\t\t\tout_mode: 'out',\r\n\t\t\tbounce: false,\r\n\t\t\tattract: {\r\n\t\t\t\tenable: true,\r\n\t\t\t\trotateX: 600,\r\n\t\t\t\trotateY: 1200\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tinteractivity: {\r\n\t\tdetect_on: 'canvas',\r\n\t\tevents: {\r\n\t\t\tonhover: {\r\n\t\t\t\tenable: true,\r\n\t\t\t\tmode: 'grab'\r\n\t\t\t},\r\n\t\t\tonclick: {\r\n\t\t\t\tenable: true,\r\n\t\t\t\tmode: 'push'\r\n\t\t\t},\r\n\t\t\tresize: true\r\n\t\t},\r\n\t\tmodes: {\r\n\t\t\tgrab: {\r\n\t\t\t\tdistance: 140,\r\n\t\t\t\tline_linked: {\r\n\t\t\t\t\topacity: 1\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tbubble: {\r\n\t\t\t\tdistance: 400,\r\n\t\t\t\tsize: 40,\r\n\t\t\t\tduration: 2,\r\n\t\t\t\topacity: 8,\r\n\t\t\t\tspeed: 3\r\n\t\t\t},\r\n\t\t\trepulse: {\r\n\t\t\t\tdistance: 200,\r\n\t\t\t\tduration: 0.4\r\n\t\t\t},\r\n\t\t\tpush: {\r\n\t\t\t\tparticles_nb: 4\r\n\t\t\t},\r\n\t\t\tremove: {\r\n\t\t\t\tparticles_nb: 2\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tretina_detect: true\r\n});\r\n// bracket text\r\n\r\n// lazy loading\r\n\r\nconst animationHandler = class {\r\n\tconstructor({ selectors }) {\r\n\t\tthis.selectors = selectors;\r\n\t\tthis.handle();\r\n\t}\r\n\r\n\thandle() {\r\n\t\tthis.selectors.forEach(selector => {\r\n\t\t\tconst { animate, start } = selector.dataset;\r\n\t\t\tswitch (start) {\r\n\t\t\t\tcase 'load':\r\n\t\t\t\t\tdocument.addEventListener('DOMContentLoaded', () => {\r\n\t\t\t\t\t\tselector.classList.add(animate);\r\n\t\t\t\t\t});\r\n\t\t\t\tcase 'scroll':\r\n\t\t\t\t\twindow.addEventListener('scroll', () =>\r\n\t\t\t\t\t\tthis.checkScroll(selector, animate)\r\n\t\t\t\t\t);\r\n\t\t\t\t\tthis.checkScroll(selector, animate);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tcheckScroll(selector, animate) {\r\n\t\tif (\r\n\t\t\tselector.getBoundingClientRect().top <=\r\n\t\t\tdocument.documentElement.clientHeight\r\n\t\t) {\r\n\t\t\tselector.classList.add(animate);\r\n\t\t}\r\n\t}\r\n};\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n\tnew animationHandler({\r\n\t\tselectors: [...document.querySelectorAll('.animated')]\r\n\t});\r\n});\r\n"]}