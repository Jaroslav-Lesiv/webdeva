{"version":3,"sources":["assets/js/navigation/index.js","assets/js/config.js","assets/js/helper.js","assets/js/images.js","assets/js/notification/index.js","assets/js/lazyLoad/index.js","assets/js/textBracket/index.js","assets/js/contacts/index.js","assets/js/main.js"],"names":["navLinks","document","querySelectorAll","debounce","func","wait","immediate","timeout","context","args","arguments","callNow","clearTimeout","setTimeout","apply","ScrollControl","links","hash","window","location","pathname","map","link","node","getAttribute","replace","selector","title","nodeList","querySelector","addEventListener","_","sectionHandler","linksHandler","_updateNavigation","updateNavigation","updateSections","coords","getBoundingClientRect","isCurrent","top","bottom","forEach","event","preventDefault","classList","add","history","replaceState","remove","find","scrollTo","offsetTop","behavior","MobileControl","isActive","button","nav","toggle","main","render","secret","domain","config","create","tagname","createElement","div","span","ul","li","strong","a","h3","h4","h5","p","img","setStyle","styles","Object","entries","key","value","style","Http","data","success","url","error","myDomain","_url","xhr","XMLHttpRequest","_secret","json","JSON","stringify","onreadystatechange","readyState","DONE","status","response","open","setRequestHeader","send","http","mail","require","NotificationBlock","cloneNode","position","right","padding","display","flexDirection","justifyContent","alignItems","NotificationContainer","borderRadius","boxShadow","backgroundColor","margin","minWidth","icon","src","width","height","marginRight","NotificationContent","flexGrow","Notification","body","append","anim_show","anim_hide","label","mess","id","Date","prepend","el","_NotificationContainer","className","_NotificationContent","_icon","_NotificationLabel","innerHTML","_NotificationMessage","_notification","loadImages","images","LazyLoad","checkPosition","length","image","isVisible","showImage","undefined","elem","windowHeight","documentElement","clientHeight","topVisible","bottomVisible","_src","_bg","Array","prototype","slice","call","filter","backgroundImage","lazy","TextBracket","dataset","keywords","duration","words","split","current","createNode","bracket","before","after","wordWrap","word","textTransform","fontWeight","overflow","wordsSelector","textWord","_word","wordSlider","transition","maxWidth","offsetWidth","maxHeight","offsetHeight","left","update","transform","textBracket","form","getElementById","name","email","message","post","particlesJS","particles","number","density","enable","value_area","color","shape","type","stroke","polygon","nb_sides","opacity","random","anim","speed","opacity_min","sync","size","size_min","line_linked","distance","move","direction","straight","out_mode","bounce","attract","rotateX","rotateY","interactivity","detect_on","events","onhover","mode","onclick","resize","modes","grab","bubble","repulse","push","particles_nb","retina_detect","animationHandler","selectors","handle","animate","start","checkScroll"],"mappings":"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","file":"main.7c519a5f.map","sourceRoot":"../src","sourcesContent":["const navLinks = document.querySelectorAll('#nav ul.list li a');\r\n\r\nfunction debounce(func, wait, immediate) {\r\n\tvar timeout;\r\n\treturn function() {\r\n\t\tvar context = this,\r\n\t\t\targs = arguments;\r\n\t\tvar later = function() {\r\n\t\t\ttimeout = null;\r\n\t\t\tif (!immediate) func.apply(context, args);\r\n\t\t};\r\n\t\tvar callNow = immediate && !timeout;\r\n\t\tclearTimeout(timeout);\r\n\t\ttimeout = setTimeout(later, wait);\r\n\t\tif (callNow) func.apply(context, args);\r\n\t};\r\n}\r\nconst ScrollControl = class {\r\n\tconstructor({ links = [] }) {\r\n\t\tthis.hash = window.location.pathname;\r\n\r\n\t\tthis.links = [...links].map(link => ({\r\n\t\t\tnode: link,\r\n\t\t\thash: link.getAttribute('href').replace('#', '/'),\r\n\t\t\tselector: link.getAttribute('href').replace('/', '#'),\r\n\t\t\ttitle: link.getAttribute('title')\r\n\t\t}));\r\n\r\n\t\tthis.nodeList = [\r\n\t\t\t...this.links.map(link => ({\r\n\t\t\t\tnode: document.querySelector(link.selector),\r\n\t\t\t\thash: link.hash\r\n\t\t\t}))\r\n\t\t];\r\n\r\n\t\twindow.addEventListener('scroll', _ => this.sectionHandler());\r\n\t\tthis.linksHandler();\r\n        this._updateNavigation = debounce(this.updateNavigation, 30);\r\n        if (this.hash && this.hash !== '/') this.updateSections()\r\n\t}\r\n\r\n\tsectionHandler() {\r\n\t\tfor (let node of this.nodeList) {\r\n\t\t\tconst coords = node.node.getBoundingClientRect();\r\n\t\t\tconst isCurrent = coords.top >= 0 || coords.bottom - 40 > 0;\r\n\t\t\tif (isCurrent) {\r\n\t\t\t\tthis.hash = node.hash;\r\n\t\t\t\tthis._updateNavigation();\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tlinksHandler() {\r\n\t\tthis.links.forEach(link => {\r\n\t\t\tlink.node.addEventListener('click', event => {\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tthis.hash = link.hash;\r\n\t\t\t\tthis.updateSections();\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\tupdateNavigation() {\r\n\t\tthis.links.forEach(link => {\r\n\t\t\tif (link.hash === this.hash) {\r\n\t\t\t\tlink.node.classList.add('btn-primary');\r\n\t\t\t\tconst title = `WebDeva - ${link.title}`;\r\n\t\t\t\twindow.history.replaceState(null, null, link.hash);\r\n\t\t\t\twindow.document.title = title;\r\n\t\t\t} else {\r\n\t\t\t\tlink.node.classList.remove('btn-primary');\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tupdateSections() {\r\n\t\tconst node = this.nodeList.find(node => node.hash === this.hash).node;\r\n\t\twindow.scrollTo({\r\n\t\t\ttop: node.offsetTop,\r\n\t\t\tbehavior: 'smooth'\r\n\t\t});\r\n\t}\r\n};\r\n\r\nnew ScrollControl({\r\n\tlinks: navLinks\r\n});\r\n\r\nconst MobileControl = class {\r\n\tconstructor() {\r\n\t\tthis.isActive = false;\r\n\t\tthis.button = document.querySelector('#nav-toggle_menu');\r\n\t\tthis.nav = document.querySelector('#nav');\r\n\t\tthis.button.addEventListener('click', () => this.toggle());\r\n\t\tthis.main = document.querySelector('.main');\r\n\t}\r\n\r\n\ttoggle() {\r\n\t\tthis.isActive = !this.isActive;\r\n\t\t// this.isActive ? this.main.classList.add('blur') : this.main.classList.remove('blur')\r\n\t\tthis.render();\r\n\t}\r\n\r\n\trender() {\r\n\t\tif (this.isActive) {\r\n\t\t\tthis.button.classList.add('active');\r\n\t\t\tthis.nav.classList.add('active');\r\n\t\t} else {\r\n\t\t\tthis.button.classList.remove('active');\r\n\t\t\tthis.nav.classList.remove('active');\r\n\t\t}\r\n\t}\r\n};\r\n\r\nnew MobileControl();\r\n","export default {\r\n    secret: 'WCUj3/(iTn.Nw4M]ezy#DU5G&P/0Un',\r\n    domain: 'https://still-journey-84385.herokuapp.com'\r\n}","import config from './config';\r\nconst { secret, domain } = config;\r\nconst create = tagname => document.createElement(tagname);\r\n\r\nconst div = create('div');\r\nconst span = create('span');\r\nconst nav = create('nav');\r\nconst ul = create('ul');\r\nconst li = create('li');\r\nconst strong = create('strong');\r\nconst a = create('a');\r\nconst h3 = create('h3');\r\nconst h4 = create('h4');\r\nconst h5 = create('h5');\r\nconst p = create('p');\r\nconst img = create('img');\r\nconst button = create('button');\r\n\r\nconst setStyle = (selector, styles = {}) => {\r\n\tfor (let [key, value] of Object.entries(styles)) {\r\n\t\tselector.style[key] = value;\r\n\t}\r\n};\r\n\r\nconst Http = class {\r\n\tconstructor({ secret, domain }) {\r\n\t\tthis.secret = secret;\r\n\t\tthis.domain = domain;\r\n\t}\r\n\r\n\tpost({ data, success, error, url, myDomain = true }) {\r\n\t\tconst _url = myDomain ? `${this.domain}/${url}` : url;\r\n\r\n\t\tconst xhr = new XMLHttpRequest();\r\n\r\n\t\tif (myDomain) data._secret = this.secret;\r\n\r\n\t\tconst json = JSON.stringify(data);\r\n\r\n\t\txhr.onreadystatechange = () => {\r\n\t\t\tif (xhr.readyState == XMLHttpRequest.DONE && xhr.status == 200) {\r\n\t\t\t\tsuccess(xhr.response);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t// Отсылаем объект в формате JSON и с Content-Type application/json\r\n\t\t// Сервер должен уметь такой Content-Type принимать и раскодировать\r\n\t\txhr.open('POST', _url, true);\r\n\t\txhr.setRequestHeader('Content-type', 'application/json; charset=utf-8');\r\n\t\txhr.send(json);\r\n\t}\r\n};\r\nconst http = new Http({ secret, domain });\r\n\r\nexport { div, span, nav, ul, li, strong, a, h3, h4, h5, p, img, button, setStyle, http };\r\n","export default {\n    mail: require('../img/icon/mail.png')\n}","import {\r\n    div,\r\n    span,\r\n    nav,\r\n    ul,\r\n    li,\r\n    strong,\r\n    a,\r\n    h3,\r\n    h4,\r\n    h5,\r\n    p,\r\n    img,\r\n    button,\r\n    setStyle\r\n} from '../helper'\r\nimport {mail} from '../images'\r\n\r\nconst NotificationBlock = div.cloneNode()\r\nsetStyle(NotificationBlock, {\r\n    position: 'fixed',\r\n    right: '15px',\r\n    bottom: '15px',\r\n    padding: '10px',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'center',\r\n    alignItems: 'flex-end',\r\n})\r\n\r\nconst NotificationContainer = div.cloneNode()\r\nsetStyle(NotificationContainer, {\r\n    padding: '2px 25px',\r\n    borderRadius: '3px',\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    boxShadow: '0 3px 13px 1px rgba(0,0,0,0.12)',\r\n    backgroundColor: '#ffffff',\r\n    margin: '5px 0',\r\n    minWidth: '250px'\r\n})\r\n\r\n\r\nconst icon = img.cloneNode()\r\nicon.src = mail\r\nsetStyle(icon, {\r\n    width: '35px',\r\n    height: '35px',\r\n    marginRight: '15px'\r\n})\r\n\r\nconst NotificationContent = div.cloneNode()\r\nsetStyle(NotificationContent, {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    flexGrow: 1\r\n})\r\nconst Notification = class {\r\n    constructor() {\r\n        this.NotificationBlock = NotificationBlock\r\n        document.body.append(NotificationBlock)\r\n        this.anim_show = 'slideInRight'\r\n        this.anim_hide = 'slideOutRight'\r\n    }\r\n    \r\n\r\n    add({ label, mess }) {\r\n        let id = `_${+new Date()}`\r\n        this.NotificationBlock.prepend( this.create({ label, mess, id }) )\r\n        setTimeout( () => this.remove(id), 3000 )\r\n    }\r\n\r\n    remove(id) {\r\n        const el = this.NotificationBlock.querySelector(`#${id}`)\r\n        el.classList.remove(this.anim_show)\r\n        el.classList.add(this.anim_hide)\r\n        setTimeout( () => el.remove(), 500 )\r\n    }\r\n    create({ label, mess, id }) {\r\n        const _NotificationContainer = NotificationContainer.cloneNode()\r\n        _NotificationContainer.id = id\r\n        _NotificationContainer.className = `transition ${this.anim_show}`\r\n        const _NotificationContent = NotificationContent.cloneNode()\r\n\r\n        const _icon = icon.cloneNode()\r\n\r\n        const _NotificationLabel = h4.cloneNode()\r\n        _NotificationLabel.className = 'card-label snake'\r\n        _NotificationLabel.innerHTML = label\r\n\r\n        const _NotificationMessage = p.cloneNode()\r\n        _NotificationMessage.className = 'description'\r\n        _NotificationMessage.innerHTML = mess\r\n\r\n        _NotificationContent.append(_NotificationLabel, _NotificationMessage)\r\n        _NotificationContainer.append(_icon, _NotificationContent)\r\n\r\n        return _NotificationContainer\r\n    }\r\n}\r\n\r\n    export const _notification = new Notification()\r\n    window._notification = _notification","const loadImages = document.querySelectorAll('.lazy-load') || [];\r\nconst images = {\r\n    'gw_list': require('../../img/examples/goodWorker/gw_list.png'),\r\n\r\n    'ng_desktop': require('../../img/examples/normalgame/ng_desktop.png'),\r\n    'ng_mobile': require('../../img/examples/normalgame/ng_mobile.png'),\r\n\r\n    'cam_list': require('../../img/examples/cryptarena-mobile/cam_mobile_list.png'),\r\n    'cam_coin': require('../../img/examples/cryptarena-mobile/cam_mobile_coin.png'),\r\n    'cam_news': require('../../img/examples/cryptarena-mobile/cam_mobile_news.png'),\r\n\r\n    'jlm_desktop': require('../../img/examples/jlm/jlm_desktop.png'),\r\n    'jlm_mobile': require('../../img/examples/jlm/jlm_mobile.png'),\r\n    'jlme_desktop': require('../../img/examples/jlm/jlme_desktop.jpg'),\r\n\r\n    'nomis_desktop': require('../../img/examples/nomis/nomis_desktop.png'),\r\n    'nomis_mobile': require('../../img/examples/nomis/nomis_mobile.png'),\r\n}\r\nconst LazyLoad = class {\r\n\tconstructor({ images }) {\r\n\t\tthis.images = images;\r\n\t\twindow.addEventListener('scroll', () => this.checkPosition());\r\n\t}\r\n\r\n\tcheckPosition() {\r\n\t\tthis.images.length &&\r\n\t\t\tthis.images.forEach(image =>\r\n\t\t\t\tthis.isVisible(image) ? this.showImage(image) : undefined\r\n\t\t\t);\r\n\t}\r\n\r\n\tisVisible(elem) {\r\n\t\tconst coords = elem.getBoundingClientRect();\r\n\r\n\t\tconst windowHeight = document.documentElement.clientHeight;\r\n\r\n\t\tconst topVisible =\r\n\t\t\tcoords.top + windowHeight / 2 > 0 && coords.top < windowHeight;\r\n\t\tconst bottomVisible =\r\n\t\t\tcoords.bottom < windowHeight + windowHeight / 2 && coords.bottom > 0;\r\n\r\n\t\treturn topVisible || bottomVisible;\r\n\t}\r\n\r\n\tshowImage(elem) {\r\n\t\tconst _src = elem.getAttribute('realsrc');\r\n\t\tconst _bg = elem.getAttribute('realbg');\r\n\t\tif (_src) {\r\n\t\t\telem.src = _src;\r\n\t\t\tthis.images = Array.prototype.slice\r\n\t\t\t\t.call(this.images)\r\n\t\t\t\t.filter(image => image !== elem);\r\n\t\t} else if (_bg) {\r\n\t\t\telem.style.backgroundImage = `url(${images[_bg]}`;\r\n\t\t\tthis.images = Array.prototype.slice\r\n\t\t\t\t.call(this.images)\r\n\t\t\t\t.filter(image => image !== elem);\r\n        }\r\n\t}\r\n};\r\n\r\nconst lazy = new LazyLoad({\r\n\timages: loadImages\r\n});\r\n","import {\r\n    div,\r\n    span,\r\n    nav,\r\n    ul,\r\n    li,\r\n    strong,\r\n    a,\r\n    h3,\r\n    p,\r\n    img,\r\n    button,\r\n    setStyle\r\n} from '../helper'\r\nconst TextBracket = class {\r\n    constructor({\r\n        selector\r\n    }) {\r\n        if (!selector) return;\r\n        this.selector = selector;\r\n        const {\r\n            keywords = [], duration = 4000\r\n        } = this.selector.dataset;\r\n        this.duration = duration;\r\n        this.words = keywords.split(\",\");\r\n\r\n        this.current = 0;\r\n        this.createNode();\r\n    }\r\n    createNode() {\r\n        const bracket = div.cloneNode();\r\n        const before = h3.cloneNode();\r\n        const after = h3.cloneNode();\r\n        const wordWrap = div.cloneNode();\r\n        this.wordWrap = wordWrap;\r\n        const word = h3.cloneNode();\r\n        word.className = 'color-primary'\r\n\r\n        before.className = 'color-primary bold mr-10'\r\n        after.className = 'color-primary bold ml-10'\r\n\r\n        setStyle(word, {\r\n            display: 'inline-flex',\r\n            justifyContent: 'center',\r\n            textTransform: 'uppercase',\r\n            fontWeight: '600',\r\n        })\r\n\r\n        setStyle(bracket, {\r\n            display: \"inline-flex\"\r\n        });\r\n\r\n        setStyle(wordWrap, {\r\n            display: \"flex\",\r\n            overflow: 'hidden',\r\n        });\r\n\r\n        before.innerHTML = \"[\";\r\n        after.innerHTML = \"]\";\r\n\r\n        bracket.append(before, wordWrap, after);\r\n\r\n        let maxWidth = 0;\r\n        let maxHeight = 0;\r\n        this.wordsSelector = this.words.map(textWord => {\r\n            const _word = word.cloneNode(true);\r\n            _word.innerHTML = textWord;\r\n            return _word;\r\n        });\r\n        const wordSlider = div.cloneNode()\r\n        setStyle(wordSlider, {\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            transition: '0.4s'\r\n        })\r\n        wordSlider.append(...this.wordsSelector)\r\n        this.wordWrap.append(wordSlider);\r\n\r\n        this.selector.append(bracket);\r\n\r\n        this.maxWidth = `${wordSlider.offsetWidth}px`\r\n        this.maxHeight = this.wordsSelector[0].offsetHeight\r\n        setStyle(this.wordWrap, {\r\n            width: this.maxWidth,\r\n            height: `${this.maxHeight}px`,\r\n            position: \"relative\",\r\n        });\r\n        setStyle(wordSlider, {\r\n            position: 'absolute',\r\n            top: 0,\r\n            left: 0,\r\n        })\r\n        this.wordSlider = wordSlider\r\n        this.update();\r\n    }\r\n    update() {\r\n        setStyle(this.wordSlider, {\r\n            transform: `translateY(-${this.current * this.maxHeight}px)`\r\n        })\r\n        this.current =\r\n            this.current >= this.wordsSelector.length - 1 ? 0 : this.current + 1;\r\n\r\n        setTimeout(() => this.update(), this.duration);\r\n    }\r\n};\r\nconst textBracket = document.querySelector(\".text-bracket\");\r\nnew TextBracket({\r\n    selector: textBracket\r\n});","import { http } from '../helper'\r\nimport { _notification } from '../notification'\r\nconst form = document.getElementById('contact_form')\r\n\r\nform.addEventListener('submit', event => {\r\n    event.preventDefault()\r\n    const [name, email, message] = [form.querySelector('#contact_name').value, form.querySelector('#contact_email').value, form.querySelector('#contact_message').value]\r\n\r\n    const data = {\r\n        name,\r\n        email,\r\n        message\r\n    }\r\n    form.classList.add('loading')\r\n\r\n    http.post({ \r\n        data, url: `message`, \r\n        success: () => {\r\n            _notification.add({ label: `Message sending`, mess: 'You messages sended seccessfull :)' })\r\n            form.classList.remove('loading')\r\n        }, \r\n        error: () => {\r\n            _notification.add({ label: `Message sending`, mess: 'You messages not sended :(' }) \r\n            form.classList.remove('loading')\r\n        }\r\n    })\r\n\r\n\r\n})","import './navigation';\r\nimport './notification';\r\nimport './lazyLoad';\r\nimport './textBracket';\r\n// import './animation'\r\n// import './examples'\r\nimport './contacts';\r\n\r\n// import './http'\r\nparticlesJS('particles-js', {\r\n\tparticles: {\r\n\t\tnumber: {\r\n\t\t\tvalue: 40,\r\n\t\t\tdensity: {\r\n\t\t\t\tenable: true,\r\n\t\t\t\tvalue_area: 500\r\n\t\t\t}\r\n\t\t},\r\n\t\tcolor: {\r\n\t\t\tvalue: '#59DBD5'\r\n\t\t},\r\n\t\tshape: {\r\n\t\t\ttype: 'circle',\r\n\t\t\tstroke: {\r\n\t\t\t\twidth: 0,\r\n\t\t\t\tcolor: '#505050'\r\n\t\t\t},\r\n\t\t\tpolygon: {\r\n\t\t\t\tnb_sides: 5\r\n\t\t\t},\r\n\t\t\timage: {\r\n\t\t\t\tsrc: 'img/github.svg',\r\n\t\t\t\twidth: 100,\r\n\t\t\t\theight: 100\r\n\t\t\t}\r\n\t\t},\r\n\t\topacity: {\r\n\t\t\tvalue: 0.5,\r\n\t\t\trandom: false,\r\n\t\t\tanim: {\r\n\t\t\t\tenable: false,\r\n\t\t\t\tspeed: 1,\r\n\t\t\t\topacity_min: 0.1,\r\n\t\t\t\tsync: false\r\n\t\t\t}\r\n\t\t},\r\n\t\tsize: {\r\n\t\t\tvalue: 3,\r\n\t\t\trandom: true,\r\n\t\t\tanim: {\r\n\t\t\t\tenable: false,\r\n\t\t\t\tspeed: 40,\r\n\t\t\t\tsize_min: 0.1,\r\n\t\t\t\tsync: false\r\n\t\t\t}\r\n\t\t},\r\n\t\tline_linked: {\r\n\t\t\tenable: true,\r\n\t\t\tdistance: 150,\r\n\t\t\tcolor: '#505050',\r\n\t\t\topacity: 0.4,\r\n\t\t\twidth: 1\r\n\t\t},\r\n\t\tmove: {\r\n\t\t\tenable: true,\r\n\t\t\tspeed: 6,\r\n\t\t\tdirection: 'none',\r\n\t\t\trandom: false,\r\n\t\t\tstraight: false,\r\n\t\t\tout_mode: 'out',\r\n\t\t\tbounce: false,\r\n\t\t\tattract: {\r\n\t\t\t\tenable: true,\r\n\t\t\t\trotateX: 600,\r\n\t\t\t\trotateY: 1200\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tinteractivity: {\r\n\t\tdetect_on: 'canvas',\r\n\t\tevents: {\r\n\t\t\tonhover: {\r\n\t\t\t\tenable: true,\r\n\t\t\t\tmode: 'grab'\r\n\t\t\t},\r\n\t\t\tonclick: {\r\n\t\t\t\tenable: true,\r\n\t\t\t\tmode: 'push'\r\n\t\t\t},\r\n\t\t\tresize: true\r\n\t\t},\r\n\t\tmodes: {\r\n\t\t\tgrab: {\r\n\t\t\t\tdistance: 140,\r\n\t\t\t\tline_linked: {\r\n\t\t\t\t\topacity: 1\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tbubble: {\r\n\t\t\t\tdistance: 400,\r\n\t\t\t\tsize: 40,\r\n\t\t\t\tduration: 2,\r\n\t\t\t\topacity: 8,\r\n\t\t\t\tspeed: 3\r\n\t\t\t},\r\n\t\t\trepulse: {\r\n\t\t\t\tdistance: 200,\r\n\t\t\t\tduration: 0.4\r\n\t\t\t},\r\n\t\t\tpush: {\r\n\t\t\t\tparticles_nb: 4\r\n\t\t\t},\r\n\t\t\tremove: {\r\n\t\t\t\tparticles_nb: 2\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tretina_detect: true\r\n});\r\n// bracket text\r\n\r\n// lazy loading\r\n\r\nconst animationHandler = class {\r\n\tconstructor({ selectors }) {\r\n\t\tthis.selectors = selectors;\r\n\t\tthis.handle();\r\n\t}\r\n\r\n\thandle() {\r\n\t\tthis.selectors.forEach(selector => {\r\n\t\t\tconst { animate, start } = selector.dataset;\r\n\t\t\tswitch (start) {\r\n\t\t\t\tcase 'load':\r\n\t\t\t\t\tdocument.addEventListener('DOMContentLoaded', () => {\r\n\t\t\t\t\t\tselector.classList.add(animate);\r\n\t\t\t\t\t});\r\n\t\t\t\tcase 'scroll':\r\n\t\t\t\t\twindow.addEventListener('scroll', () =>\r\n\t\t\t\t\t\tthis.checkScroll(selector, animate)\r\n\t\t\t\t\t);\r\n\t\t\t\t\tthis.checkScroll(selector, animate);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tcheckScroll(selector, animate) {\r\n\t\tif (\r\n\t\t\tselector.getBoundingClientRect().top <=\r\n\t\t\tdocument.documentElement.clientHeight\r\n\t\t) {\r\n\t\t\tselector.classList.add(animate);\r\n\t\t}\r\n\t}\r\n};\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n\tnew animationHandler({\r\n\t\tselectors: [...document.querySelectorAll('.animated')]\r\n\t});\r\n});\r\n"]}