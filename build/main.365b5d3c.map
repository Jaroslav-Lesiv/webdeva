{"version":3,"sources":["assets/js/config.js","assets/js/helper.js","assets/js/images.js","assets/js/notification/index.js","assets/js/lazyLoad/index.js","assets/js/navigation/index.js","assets/js/textBracket/index.js","assets/js/contacts/index.js","assets/js/main.js"],"names":["http","secret","config","domain","create","document","createElement","tagname","div","span","nav","ul","li","strong","a","h3","h4","h5","p","img","button","setStyle","selector","styles","log","Object","entries","key","value","style","Http","data","success","url","error","myDomain","_url","xhr","XMLHttpRequest","_secret","json","JSON","stringify","onreadystatechange","readyState","DONE","status","response","open","setRequestHeader","send","require","NotificationBlock","cloneNode","NotificationContainer","icon","src","mail","NotificationContent","Notification","body","append","anim_show","anim_hide","label","mess","id","Date","prepend","remove","el","querySelector","classList","add","_NotificationContainer","className","_NotificationContent","_icon","_NotificationLabel","innerHTML","_NotificationMessage","_notification","window","loadImages","querySelectorAll","images","LazyLoad","addEventListener","checkPosition","length","forEach","isVisible","image","showImage","undefined","elem","coords","getBoundingClientRect","windowHeight","documentElement","clientHeight","topVisible","top","bottomVisible","bottom","_src","getAttribute","_bg","Array","prototype","slice","call","filter","backgroundImage","lazy","navLinks","ScrollControl","links","hash","map","link","nodeList","sectionHandler","linksHandler","node","isCurrent","updateNavigation","preventDefault","updateSections","scrollTo","find","offsetTop","MobileControl","isActive","toggle","main","render","TextBracket","dataset","keywords","duration","words","split","current","createNode","bracket","before","after","wordWrap","word","wordsSelector","_word","textWord","wordSlider","maxWidth","offsetWidth","maxHeight","offsetHeight","update","textBracket","form","getElementById","message","post","particlesJS","animationHandler","selectors","handle","animate","start","checkScroll","console"],"mappings":"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","file":"main.365b5d3c.map","sourceRoot":"../src","sourcesContent":["export default {\r\n    secret: 'WCUj3/(iTn.Nw4M]ezy#DU5G&P/0Un',\r\n    domain: 'https://still-journey-84385.herokuapp.com'\r\n}","import config from './config'\r\nconst { secret, domain } = config\r\nconst create = tagname => document.createElement(tagname);\r\n\r\nconst div = create(\"div\");\r\nconst span = create(\"span\");\r\nconst nav = create(\"nav\");\r\nconst ul = create(\"ul\");\r\nconst li = create(\"li\");\r\nconst strong = create(\"strong\");\r\nconst a = create(\"a\");\r\nconst h3 = create(\"h3\");\r\nconst h4 = create(\"h4\");\r\nconst h5 = create(\"h5\");\r\nconst p = create(\"p\");\r\nconst img = create(\"img\");\r\nconst button = create(\"button\");\r\n\r\nconst setStyle = (selector, styles = {}) => {\r\n    console.log(styles);\r\n    for (let [key, value] of Object.entries(styles)) {\r\n      selector.style[key] = value;\r\n    }\r\n  };\r\n\r\nconst Http = class {\r\n  constructor({ secret, domain }) {\r\n    this.secret = secret\r\n    this.domain = domain\r\n  }\r\n\r\n  post({ data, success, error, url, myDomain = true }) {\r\n    const _url = myDomain ? `${this.domain}/${url}` : url  \r\n\r\n    const xhr = new XMLHttpRequest();\r\n\r\n    if (myDomain) data._secret = this.secret\r\n\r\n    const json = JSON.stringify(data)\r\n\r\n    \r\n    \r\n\r\n    xhr.onreadystatechange = () => {\r\n      if(xhr.readyState == XMLHttpRequest.DONE && xhr.status == 200) {\r\n         success(xhr.response)\r\n      }\r\n    }\r\n\r\n    // Отсылаем объект в формате JSON и с Content-Type application/json\r\n    // Сервер должен уметь такой Content-Type принимать и раскодировать\r\n    xhr.open(\"POST\", _url, true)\r\n    xhr.setRequestHeader('Content-type', 'application/json; charset=utf-8');\r\n    xhr.send(json);\r\n  }\r\n}\r\nconst http = new Http({ secret, domain })\r\n\r\nexport {\r\n    div,\r\n    span,\r\n    nav,\r\n    ul,\r\n    li,\r\n    strong,\r\n    a,\r\n    h3,\r\n    h4,\r\n    h5,\r\n    p,\r\n    img,\r\n    button,\r\n    setStyle,\r\n    http\r\n}","export default {\n    mail: require('../img/icon/mail.png')\n}","import {\r\n    div,\r\n    span,\r\n    nav,\r\n    ul,\r\n    li,\r\n    strong,\r\n    a,\r\n    h3,\r\n    h4,\r\n    h5,\r\n    p,\r\n    img,\r\n    button,\r\n    setStyle\r\n} from '../helper'\r\nimport {mail} from '../images'\r\n\r\nconst NotificationBlock = div.cloneNode()\r\nsetStyle(NotificationBlock, {\r\n    position: 'fixed',\r\n    right: '15px',\r\n    bottom: '15px',\r\n    padding: '10px',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'center',\r\n    alignItems: 'flex-end',\r\n})\r\n\r\nconst NotificationContainer = div.cloneNode()\r\nsetStyle(NotificationContainer, {\r\n    padding: '2px 25px',\r\n    borderRadius: '3px',\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    boxShadow: '0 3px 13px 1px rgba(0,0,0,0.12)',\r\n    backgroundColor: '#ffffff',\r\n    margin: '5px 0',\r\n    minWidth: '250px'\r\n})\r\n\r\n\r\nconst icon = img.cloneNode()\r\nicon.src = mail\r\nsetStyle(icon, {\r\n    width: '35px',\r\n    height: '35px',\r\n    marginRight: '15px'\r\n})\r\n\r\nconst NotificationContent = div.cloneNode()\r\nsetStyle(NotificationContent, {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    flexGrow: 1\r\n})\r\nconst Notification = class {\r\n    constructor() {\r\n        this.NotificationBlock = NotificationBlock\r\n        document.body.append(NotificationBlock)\r\n        this.anim_show = 'slideInRight'\r\n        this.anim_hide = 'slideOutRight'\r\n    }\r\n    \r\n\r\n    add({ label, mess }) {\r\n        let id = `_${+new Date()}`\r\n        this.NotificationBlock.prepend( this.create({ label, mess, id }) )\r\n        setTimeout( () => this.remove(id), 3000 )\r\n    }\r\n\r\n    remove(id) {\r\n        const el = this.NotificationBlock.querySelector(`#${id}`)\r\n        el.classList.remove(this.anim_show)\r\n        el.classList.add(this.anim_hide)\r\n        setTimeout( () => el.remove(), 500 )\r\n    }\r\n    create({ label, mess, id }) {\r\n        const _NotificationContainer = NotificationContainer.cloneNode()\r\n        _NotificationContainer.id = id\r\n        _NotificationContainer.className = `transition ${this.anim_show}`\r\n        const _NotificationContent = NotificationContent.cloneNode()\r\n\r\n        const _icon = icon.cloneNode()\r\n\r\n        const _NotificationLabel = h4.cloneNode()\r\n        _NotificationLabel.className = 'card-label snake'\r\n        _NotificationLabel.innerHTML = label\r\n\r\n        const _NotificationMessage = p.cloneNode()\r\n        _NotificationMessage.className = 'description'\r\n        _NotificationMessage.innerHTML = mess\r\n\r\n        _NotificationContent.append(_NotificationLabel, _NotificationMessage)\r\n        _NotificationContainer.append(_icon, _NotificationContent)\r\n\r\n        return _NotificationContainer\r\n    }\r\n}\r\n\r\n    export const _notification = new Notification()\r\n    window._notification = _notification","const loadImages = document.querySelectorAll('.lazy-load') || [];\r\nconst images = {\r\n    'gw_list': require('../../img/examples/goodWorker/gw_list.png'),\r\n\r\n    'ng_desktop': require('../../img/examples/normalgame/ng_desktop.png'),\r\n    'ng_mobile': require('../../img/examples/normalgame/ng_mobile.png'),\r\n\r\n    'cam_list': require('../../img/examples/cryptarena-mobile/cam_mobile_list.png'),\r\n    'cam_coin': require('../../img/examples/cryptarena-mobile/cam_mobile_coin.png'),\r\n    'cam_news': require('../../img/examples/cryptarena-mobile/cam_mobile_news.png'),\r\n\r\n    'jlm_desktop': require('../../img/examples/jlm/jlm_desktop.png'),\r\n    'jlm_mobile': require('../../img/examples/jlm/jlm_mobile.png'),\r\n    'jlme_desktop': require('../../img/examples/jlm/jlme_desktop.jpg'),\r\n\r\n    'nomis_desktop': require('../../img/examples/nomis/nomis_desktop.png'),\r\n    'nomis_mobile': require('../../img/examples/nomis/nomis_mobile.png'),\r\n}\r\nconst LazyLoad = class {\r\n\tconstructor({ images }) {\r\n\t\tthis.images = images;\r\n\t\twindow.addEventListener('scroll', () => this.checkPosition());\r\n\t}\r\n\r\n\tcheckPosition() {\r\n\t\tthis.images.length &&\r\n\t\t\tthis.images.forEach(image =>\r\n\t\t\t\tthis.isVisible(image) ? this.showImage(image) : undefined\r\n\t\t\t);\r\n\t}\r\n\r\n\tisVisible(elem) {\r\n\t\tconst coords = elem.getBoundingClientRect();\r\n\r\n\t\tconst windowHeight = document.documentElement.clientHeight;\r\n\r\n\t\tconst topVisible =\r\n\t\t\tcoords.top + windowHeight / 2 > 0 && coords.top < windowHeight;\r\n\t\tconst bottomVisible =\r\n\t\t\tcoords.bottom < windowHeight + windowHeight / 2 && coords.bottom > 0;\r\n\r\n\t\treturn topVisible || bottomVisible;\r\n\t}\r\n\r\n\tshowImage(elem) {\r\n\t\tconst _src = elem.getAttribute('realsrc');\r\n\t\tconst _bg = elem.getAttribute('realbg');\r\n\t\tif (_src) {\r\n\t\t\telem.src = _src;\r\n\t\t\tthis.images = Array.prototype.slice\r\n\t\t\t\t.call(this.images)\r\n\t\t\t\t.filter(image => image !== elem);\r\n\t\t} else if (_bg) {\r\n            console.log(_bg, images[_bg])\r\n\t\t\telem.style.backgroundImage = `url(${images[_bg]}`;\r\n\t\t\tthis.images = Array.prototype.slice\r\n\t\t\t\t.call(this.images)\r\n\t\t\t\t.filter(image => image !== elem);\r\n        }\r\n\t}\r\n};\r\n\r\nconst lazy = new LazyLoad({\r\n\timages: loadImages\r\n});\r\n","import {\r\n    div,\r\n    span,\r\n    nav,\r\n    ul,\r\n    li,\r\n    strong,\r\n    a,\r\n    h3,\r\n    p,\r\n    img,\r\n    button,\r\n    setStyle\r\n} from '../helper'\r\n\r\n\r\nconst navLinks = document.querySelectorAll(\"#nav ul.list li a\");\r\n\r\nconst ScrollControl = class {\r\n    constructor({\r\n        links = []\r\n    }) {\r\n        this.hash = null;\r\n\r\n        this.links = [...links].map(link => ({\r\n            selector: link,\r\n            hash: link.getAttribute(\"href\")\r\n        }));\r\n        this.nodeList = [\r\n            ...this.links.map(link => ({\r\n                selector: document.querySelector(link.hash),\r\n                hash: link.hash\r\n            }))\r\n        ];\r\n\r\n        window.addEventListener(\"scroll\", _ => this.sectionHandler());\r\n        this.linksHandler();\r\n    }\r\n\r\n    sectionHandler() {\r\n        const windowHeight = document.documentElement.clientHeight;\r\n        for (let node of this.nodeList) {\r\n            const coords = node.selector.getBoundingClientRect();\r\n            const isCurrent = coords.top >= 0 || coords.bottom - 40 > 0;\r\n            if (isCurrent) {\r\n                this.hash = node.hash;\r\n                this.updateNavigation();\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    linksHandler() {\r\n        this.links.forEach(link => {\r\n            link.selector.addEventListener(\"click\", event => {\r\n                event.preventDefault();\r\n                this.hash = link.hash;\r\n                this.updateSections();\r\n            });\r\n        });\r\n    }\r\n    updateNavigation() {\r\n        this.links.forEach(\r\n            link =>\r\n            link.hash === this.hash ?\r\n            link.selector.classList.add(\"btn-primary\") :\r\n            link.selector.classList.remove(\"btn-primary\")\r\n        );\r\n    }\r\n\r\n    updateSections() {\r\n        window.scrollTo({\r\n            top: this.nodeList.find(node => node.hash === this.hash).selector\r\n                .offsetTop,\r\n            behavior: \"smooth\"\r\n        });\r\n    }\r\n};\r\nnew ScrollControl({\r\n    links: navLinks\r\n});\r\n\r\nconst MobileControl = class {\r\n    constructor() {\r\n        this.isActive = false\r\n        this.button = document.querySelector('#nav-toggle_menu')\r\n        this.nav = document.querySelector('#nav')\r\n        this.button.addEventListener('click', () => this.toggle())\r\n        this.main = document.querySelector('.main')\r\n    }\r\n\r\n    toggle() {\r\n        this.isActive = !this.isActive\r\n        // this.isActive ? this.main.classList.add('blur') : this.main.classList.remove('blur')\r\n        this.render()\r\n    }\r\n\r\n    render() {\r\n        if (this.isActive) {\r\n            this.button.classList.add('active')\r\n            this.nav.classList.add('active')\r\n            console.log(this.button, this.nav, 'true 222')\r\n        } else {\r\n            this.button.classList.remove('active')\r\n            this.nav.classList.remove('active')\r\n            console.log(this.button, this.nav,'false 333')\r\n        }\r\n\r\n    }\r\n}\r\n\r\nnew MobileControl()","import {\r\n    div,\r\n    span,\r\n    nav,\r\n    ul,\r\n    li,\r\n    strong,\r\n    a,\r\n    h3,\r\n    p,\r\n    img,\r\n    button,\r\n    setStyle\r\n} from '../helper'\r\nconst TextBracket = class {\r\n    constructor({\r\n        selector\r\n    }) {\r\n        if (!selector) return;\r\n        this.selector = selector;\r\n        const {\r\n            keywords = [], duration = 4000\r\n        } = this.selector.dataset;\r\n        this.duration = duration;\r\n        this.words = keywords.split(\",\");\r\n\r\n        this.current = 0;\r\n        this.createNode();\r\n    }\r\n    createNode() {\r\n        const bracket = div.cloneNode();\r\n        const before = h3.cloneNode();\r\n        const after = h3.cloneNode();\r\n        const wordWrap = div.cloneNode();\r\n        this.wordWrap = wordWrap;\r\n        const word = h3.cloneNode();\r\n        word.className = 'color-primary'\r\n\r\n        before.className = 'color-primary bold mr-10'\r\n        after.className = 'color-primary bold ml-10'\r\n\r\n        setStyle(word, {\r\n            display: 'inline-flex',\r\n            justifyContent: 'center',\r\n            textTransform: 'uppercase',\r\n            fontWeight: '600',\r\n        })\r\n\r\n        setStyle(bracket, {\r\n            display: \"inline-flex\"\r\n        });\r\n\r\n        setStyle(wordWrap, {\r\n            display: \"flex\",\r\n            overflow: 'hidden',\r\n        });\r\n\r\n        before.innerHTML = \"[\";\r\n        after.innerHTML = \"]\";\r\n\r\n        bracket.append(before, wordWrap, after);\r\n\r\n        let maxWidth = 0;\r\n        let maxHeight = 0;\r\n        this.wordsSelector = this.words.map(textWord => {\r\n            const _word = word.cloneNode(true);\r\n            _word.innerHTML = textWord;\r\n            return _word;\r\n        });\r\n        const wordSlider = div.cloneNode()\r\n        setStyle(wordSlider, {\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            transition: '0.4s'\r\n        })\r\n        wordSlider.append(...this.wordsSelector)\r\n        this.wordWrap.append(wordSlider);\r\n\r\n        this.selector.append(bracket);\r\n\r\n        this.maxWidth = `${wordSlider.offsetWidth}px`\r\n        this.maxHeight = this.wordsSelector[0].offsetHeight\r\n        setStyle(this.wordWrap, {\r\n            width: this.maxWidth,\r\n            height: `${this.maxHeight}px`,\r\n            position: \"relative\",\r\n        });\r\n        setStyle(wordSlider, {\r\n            position: 'absolute',\r\n            top: 0,\r\n            left: 0,\r\n        })\r\n        this.wordSlider = wordSlider\r\n        this.update();\r\n    }\r\n    update() {\r\n        console.log(this.current, this.maxHeight)\r\n        setStyle(this.wordSlider, {\r\n            transform: `translateY(-${this.current * this.maxHeight}px)`\r\n        })\r\n        this.current =\r\n            this.current >= this.wordsSelector.length - 1 ? 0 : this.current + 1;\r\n\r\n        setTimeout(() => this.update(), this.duration);\r\n    }\r\n};\r\nconst textBracket = document.querySelector(\".text-bracket\");\r\nnew TextBracket({\r\n    selector: textBracket\r\n});","import { http } from '../helper'\r\nimport { _notification } from '../notification'\r\nconst form = document.getElementById('contact_form')\r\n\r\nform.addEventListener('submit', event => {\r\n    event.preventDefault()\r\n    const [name, email, message] = [form.querySelector('#contact_name').value, form.querySelector('#contact_email').value, form.querySelector('#contact_message').value]\r\n\r\n    const data = {\r\n        name,\r\n        email,\r\n        message\r\n    }\r\n    form.classList.add('loading')\r\n\r\n    http.post({ \r\n        data, url: `message`, \r\n        success: () => {\r\n            _notification.add({ label: `Message sending`, mess: 'You messages sended seccessfull :)' })\r\n            form.classList.remove('loading')\r\n        }, \r\n        error: () => {\r\n            _notification.add({ label: `Message sending`, mess: 'You messages not sended :(' }) \r\n            form.classList.remove('loading')\r\n        }\r\n    })\r\n\r\n\r\n})","\r\nimport './notification'\r\nimport './lazyLoad'\r\nimport './navigation'\r\nimport './textBracket'\r\n// import './animation'\r\n// import './examples'\r\nimport './contacts'\r\n\r\n// import './http'\r\nparticlesJS(\"particles-js\", {\r\n  particles: {\r\n    number: {\r\n      value: 40,\r\n      density: {\r\n        enable: true,\r\n        value_area: 500\r\n      }\r\n    },\r\n    color: {\r\n      value: \"#59DBD5\"\r\n    },\r\n    shape: {\r\n      type: \"circle\",\r\n      stroke: {\r\n        width: 0,\r\n        color: \"#505050\"\r\n      },\r\n      polygon: {\r\n        nb_sides: 5\r\n      },\r\n      image: {\r\n        src: \"img/github.svg\",\r\n        width: 100,\r\n        height: 100\r\n      }\r\n    },\r\n    opacity: {\r\n      value: 0.5,\r\n      random: false,\r\n      anim: {\r\n        enable: false,\r\n        speed: 1,\r\n        opacity_min: 0.1,\r\n        sync: false\r\n      }\r\n    },\r\n    size: {\r\n      value: 3,\r\n      random: true,\r\n      anim: {\r\n        enable: false,\r\n        speed: 40,\r\n        size_min: 0.1,\r\n        sync: false\r\n      }\r\n    },\r\n    line_linked: {\r\n      enable: true,\r\n      distance: 150,\r\n      color: \"#505050\",\r\n      opacity: 0.4,\r\n      width: 1\r\n    },\r\n    move: {\r\n      enable: true,\r\n      speed: 6,\r\n      direction: \"none\",\r\n      random: false,\r\n      straight: false,\r\n      out_mode: \"out\",\r\n      bounce: false,\r\n      attract: {\r\n        enable: true,\r\n        rotateX: 600,\r\n        rotateY: 1200\r\n      }\r\n    }\r\n  },\r\n  interactivity: {\r\n    detect_on: \"canvas\",\r\n    events: {\r\n      onhover: {\r\n        enable: true,\r\n        mode: \"grab\"\r\n      },\r\n      onclick: {\r\n        enable: true,\r\n        mode: \"push\"\r\n      },\r\n      resize: true\r\n    },\r\n    modes: {\r\n      grab: {\r\n        distance: 140,\r\n        line_linked: {\r\n          opacity: 1\r\n        }\r\n      },\r\n      bubble: {\r\n        distance: 400,\r\n        size: 40,\r\n        duration: 2,\r\n        opacity: 8,\r\n        speed: 3\r\n      },\r\n      repulse: {\r\n        distance: 200,\r\n        duration: 0.4\r\n      },\r\n      push: {\r\n        particles_nb: 4\r\n      },\r\n      remove: {\r\n        particles_nb: 2\r\n      }\r\n    }\r\n  },\r\n  retina_detect: true\r\n});\r\n// bracket text\r\n\r\n// lazy loading\r\n\r\n\r\nconst animationHandler = class {\r\n  constructor({\r\n      selectors\r\n  }) {\r\n      this.selectors = selectors\r\n      this.handle()\r\n  }\r\n\r\n  handle() {\r\n      this.selectors.forEach(selector => {\r\n          const {\r\n              animate,\r\n              start\r\n          } = selector.dataset;\r\n          switch (start) {\r\n              case \"load\":\r\n                  document.addEventListener(\"DOMContentLoaded\", () => {\r\n                      selector.classList.add(animate);\r\n                  });\r\n              case \"scroll\":\r\n                  window.addEventListener(\"scroll\", () => this.checkScroll(selector, animate));\r\n                  this.checkScroll(selector, animate)\r\n                  break;\r\n\r\n              default:\r\n                  break;\r\n          }\r\n      });\r\n\r\n  }\r\n\r\n  checkScroll(selector, animate) {\r\n      if (selector.getBoundingClientRect().top <= document.documentElement.clientHeight) {\r\n          selector.classList.add(animate);\r\n      }\r\n\r\n  }\r\n\r\n}\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n  new animationHandler({\r\n      selectors: [...document.querySelectorAll(\".animated\")]\r\n  })\r\n  \r\n})\r\n\r\nconsole.log([...document.querySelectorAll(\".animated\")])"]}